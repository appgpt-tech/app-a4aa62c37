//Source code generated by AppGPT (www.appgpt.tech)
import { Admin, Resource, CustomRoutes } from 'react-admin';
import { customDataProvider } from './dataProvider';
import fakeDataProvider from 'ra-data-fakerest';
import { Dashboard } from './dashboard';
import { authProvider, apInitialize } from './authProvider';
import { i18nProvider } from './i18nProvider';
import LoginPage, { Login } from './Login';
import data from './data';
import { UsersList, UsersCreate, UsersEdit } from './resources/Users';
import {
  BloodTestResultsList,
  BloodTestResultsCreate,
  BloodTestResultsEdit,
} from './resources/BloodTestResults';
import {
  AppointmentsList,
  AppointmentsCreate,
  AppointmentsEdit,
} from './resources/Appointments';
import {
  MedicationsList,
  MedicationsCreate,
  MedicationsEdit,
} from './resources/Medications';
import {
  BloodDonationsList,
  BloodDonationsCreate,
  BloodDonationsEdit,
} from './resources/BloodDonations';
import {
  EducationalResourcesList,
  EducationalResourcesCreate,
  EducationalResourcesEdit,
} from './resources/EducationalResources';
import {
  CommunityForumsList,
  CommunityForumsCreate,
  CommunityForumsEdit,
} from './resources/CommunityForums';
import {
  EmergencyContactsList,
  EmergencyContactsCreate,
  EmergencyContactsEdit,
} from './resources/EmergencyContacts';
import {
  HospitalsList,
  HospitalsCreate,
  HospitalsEdit,
} from './resources/Hospitals';
import UsersIcon from '@mui/icons-material/Person';
import BloodTestResultsIcon from '@mui/icons-material/LocalHospital';
import AppointmentsIcon from '@mui/icons-material/Event';
import MedicationsIcon from '@mui/icons-material/LocalPharmacy';
import BloodDonationsIcon from '@mui/icons-material/Bloodtype';
import EducationalResourcesIcon from '@mui/icons-material/MenuBook';
import CommunityForumsIcon from '@mui/icons-material/Forum';
import EmergencyContactsIcon from '@mui/icons-material/Phone';
import HospitalsIcon from '@mui/icons-material/LocalHospital';
// SUPERTOKENS
import React from 'react';
import SuperTokens, {
  SuperTokensWrapper,
  getSuperTokensRoutesForReactRouterDom,
} from 'supertokens-auth-react';
import ThirdPartyPasswordless from 'supertokens-auth-react/recipe/thirdpartypasswordless';
import Session from 'supertokens-auth-react/recipe/session';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import * as reactRouterDom from 'react-router-dom';
let sessionFn = Session.init();
SuperTokens.init({
  appInfo: {
    appName: import.meta.env.VITE_SUPERTOKENS_APPNAME,
    apiDomain: import.meta.env.VITE_BACKEND_DOMAIN,
    websiteDomain: import.meta.env.VITE_SUPERTOKENS_WEBSITEDOMAIN,
    apiBasePath: import.meta.env.VITE_BACKEND_APIPATH + '/auth',
    websiteBasePath: import.meta.env.VITE_SUPERTOKENS_WEBSITEBASEPATH,
  },
  recipeList: [
    ThirdPartyPasswordless.init({
      contactMethod: 'EMAIL',
      signInUpFeature: {
        providers: [
          ThirdPartyPasswordless.Github.init(),
          //ThirdPartyPasswordless.Google.init(),
          //ThirdPartyPasswordless.Facebook.init(),
          //ThirdPartyPasswordless.Apple.init(),
        ],
      },
    }),
    sessionFn,
  ],
});
apInitialize(Session);
// END SUPERTOKENS
let dataProvider: any;
if (import.meta.env.VITE_USE_BACKEND_DATA === 'true') {
  dataProvider = customDataProvider(
    import.meta.env.VITE_BACKEND_DOMAIN +
      import.meta.env.VITE_BACKEND_APIPATH +
      '/proxy',
  );
} else {
  dataProvider = fakeDataProvider(data.defaultData);
}

const App = () => (
  <SuperTokensWrapper>
    <BrowserRouter basename="/a4aa62c37">
      <Admin
        authProvider={
          import.meta.env.VITE_ENVIRONMENT != 'DEV' ? authProvider : undefined
        }
        requireAuth
        loginPage={LoginPage}
        dataProvider={dataProvider}
        i18nProvider={i18nProvider}
        dashboard={Dashboard}
      >
        <Resource
          name="Users"
          options={{ label: 'Users' }}
          list={UsersList}
          create={UsersCreate}
          edit={UsersEdit}
          recordRepresentation="name"
          icon={UsersIcon}
        />
        <Resource
          name="BloodTestResults"
          options={{ label: 'Blood Test Results' }}
          list={BloodTestResultsList}
          create={BloodTestResultsCreate}
          edit={BloodTestResultsEdit}
          recordRepresentation="testDate"
          icon={BloodTestResultsIcon}
        />
        <Resource
          name="Appointments"
          options={{ label: 'Appointments' }}
          list={AppointmentsList}
          create={AppointmentsCreate}
          edit={AppointmentsEdit}
          recordRepresentation="appointmentDateAndTime"
          icon={AppointmentsIcon}
        />
        <Resource
          name="Medications"
          options={{ label: 'Medications' }}
          list={MedicationsList}
          create={MedicationsCreate}
          edit={MedicationsEdit}
          recordRepresentation="medicationName"
          icon={MedicationsIcon}
        />
        <Resource
          name="BloodDonations"
          options={{ label: 'Blood Donations' }}
          list={BloodDonationsList}
          create={BloodDonationsCreate}
          edit={BloodDonationsEdit}
          recordRepresentation="donationDate"
          icon={BloodDonationsIcon}
        />
        <Resource
          name="EducationalResources"
          options={{ label: 'Educational Resources' }}
          list={EducationalResourcesList}
          create={EducationalResourcesCreate}
          edit={EducationalResourcesEdit}
          recordRepresentation="title"
          icon={EducationalResourcesIcon}
        />
        <Resource
          name="CommunityForums"
          options={{ label: 'Community Forums' }}
          list={CommunityForumsList}
          create={CommunityForumsCreate}
          edit={CommunityForumsEdit}
          recordRepresentation="title"
          icon={CommunityForumsIcon}
        />
        <Resource
          name="EmergencyContacts"
          options={{ label: 'Emergency Contacts' }}
          list={EmergencyContactsList}
          create={EmergencyContactsCreate}
          edit={EmergencyContactsEdit}
          recordRepresentation="contactName"
          icon={EmergencyContactsIcon}
        />
        <Resource
          name="Hospitals"
          options={{ label: 'Hospitals' }}
          list={HospitalsList}
          create={HospitalsCreate}
          edit={HospitalsEdit}
          recordRepresentation="hospitalName"
          icon={HospitalsIcon}
        />
        <CustomRoutes noLayout>
          {/*This renders the login UI on the /auth route*/}
          {getSuperTokensRoutesForReactRouterDom(reactRouterDom)}
          {/*Your app routes*/}
        </CustomRoutes>
      </Admin>
    </BrowserRouter>
  </SuperTokensWrapper>
);

export default App;
