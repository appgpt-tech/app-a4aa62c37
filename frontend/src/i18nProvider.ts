//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Users: {
      name: 'Users',
      fields: {
        name: 'Name',
        email: 'Email',
        password: 'Password',
        bloodType: 'Blood Type',
        id: 'id',
      },
    },
    BloodTestResults: {
      name: 'Blood Test Results',
      fields: {
        userId: 'User Id',
        testDate: 'Test Date',
        testType: 'Test Type',
        results: 'Results',
        interpretation: 'Interpretation',
        recommendations: 'Recommendations',
        id: 'id',
      },
    },
    Appointments: {
      name: 'Appointments',
      fields: {
        userId: 'User Id',
        healthcareProviderName: 'Healthcare Provider Name',
        appointmentDateAndTime: 'Appointment Date And Time',
        purpose: 'Purpose',
        specialInstructions: 'Special Instructions',
        id: 'id',
      },
    },
    Medications: {
      name: 'Medications',
      fields: {
        userId: 'User Id',
        medicationName: 'Medication Name',
        dosage: 'Dosage',
        frequency: 'Frequency',
        startDate: 'Start Date',
        endDate: 'End Date',
        specialInstructions: 'Special Instructions',
        id: 'id',
      },
    },
    BloodDonations: {
      name: 'Blood Donations',
      fields: {
        userId: 'User Id',
        donationDate: 'Donation Date',
        location: 'Location',
        typeOfDonation: 'Type Of Donation',
        notes: 'Notes',
        id: 'id',
      },
    },
    EducationalResources: {
      name: 'Educational Resources',
      fields: {
        title: 'Title',
        content: 'Content',
        publicationDate: 'Publication Date',
        authorOrSource: 'Author Or Source',
        id: 'id',
      },
    },
    CommunityForums: {
      name: 'Community Forums',
      fields: {
        topicId: 'Topic Id',
        userId: 'User Id',
        title: 'Title',
        content: 'Content',
        creationDate: 'Creation Date',
        id: 'id',
      },
    },
    EmergencyContacts: {
      name: 'Emergency Contacts',
      fields: {
        userId: 'User Id',
        contactName: 'Contact Name',
        relationship: 'Relationship',
        phoneNumber: 'Phone Number',
        specialNotes: 'Special Notes',
        id: 'id',
      },
    },
    Hospitals: {
      name: 'Hospitals',
      fields: {
        hospitalName: 'Hospital Name',
        address: 'Address',
        contactInformation: 'Contact Information',
        specialties: 'Specialties',
        servicesOffered: 'Services Offered',
        hoursOfOperation: 'Hours Of Operation',
        ratingsOrReviews: 'Ratings Or Reviews',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Users: {
      name: 'Users (fr)',
      fields: {
        name: 'Name (fr)',
        email: 'Email (fr)',
        password: 'Password (fr)',
        bloodType: 'Blood Type (fr)',
        id: 'id',
      },
    },
    BloodTestResults: {
      name: 'Blood Test Results (fr)',
      fields: {
        userId: 'User Id (fr)',
        testDate: 'Test Date (fr)',
        testType: 'Test Type (fr)',
        results: 'Results (fr)',
        interpretation: 'Interpretation (fr)',
        recommendations: 'Recommendations (fr)',
        id: 'id',
      },
    },
    Appointments: {
      name: 'Appointments (fr)',
      fields: {
        userId: 'User Id (fr)',
        healthcareProviderName: 'Healthcare Provider Name (fr)',
        appointmentDateAndTime: 'Appointment Date And Time (fr)',
        purpose: 'Purpose (fr)',
        specialInstructions: 'Special Instructions (fr)',
        id: 'id',
      },
    },
    Medications: {
      name: 'Medications (fr)',
      fields: {
        userId: 'User Id (fr)',
        medicationName: 'Medication Name (fr)',
        dosage: 'Dosage (fr)',
        frequency: 'Frequency (fr)',
        startDate: 'Start Date (fr)',
        endDate: 'End Date (fr)',
        specialInstructions: 'Special Instructions (fr)',
        id: 'id',
      },
    },
    BloodDonations: {
      name: 'Blood Donations (fr)',
      fields: {
        userId: 'User Id (fr)',
        donationDate: 'Donation Date (fr)',
        location: 'Location (fr)',
        typeOfDonation: 'Type Of Donation (fr)',
        notes: 'Notes (fr)',
        id: 'id',
      },
    },
    EducationalResources: {
      name: 'Educational Resources (fr)',
      fields: {
        title: 'Title (fr)',
        content: 'Content (fr)',
        publicationDate: 'Publication Date (fr)',
        authorOrSource: 'Author Or Source (fr)',
        id: 'id',
      },
    },
    CommunityForums: {
      name: 'Community Forums (fr)',
      fields: {
        topicId: 'Topic Id (fr)',
        userId: 'User Id (fr)',
        title: 'Title (fr)',
        content: 'Content (fr)',
        creationDate: 'Creation Date (fr)',
        id: 'id',
      },
    },
    EmergencyContacts: {
      name: 'Emergency Contacts (fr)',
      fields: {
        userId: 'User Id (fr)',
        contactName: 'Contact Name (fr)',
        relationship: 'Relationship (fr)',
        phoneNumber: 'Phone Number (fr)',
        specialNotes: 'Special Notes (fr)',
        id: 'id',
      },
    },
    Hospitals: {
      name: 'Hospitals (fr)',
      fields: {
        hospitalName: 'Hospital Name (fr)',
        address: 'Address (fr)',
        contactInformation: 'Contact Information (fr)',
        specialties: 'Specialties (fr)',
        servicesOffered: 'Services Offered (fr)',
        hoursOfOperation: 'Hours Of Operation (fr)',
        ratingsOrReviews: 'Ratings Or Reviews (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
